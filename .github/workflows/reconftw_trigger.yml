name: reconftw-trigger

on:
   # schedule:
     # - cron: '0 0 * * *'
    # workflow_dispatch
    # push:
    workflow_dispatch:
      inputs:
          target:
            required: false
            default: 'testfire.net'

jobs:
  # osm-trigger:
  #   runs-on: ubuntu-latest
  #   env:
  #     TARGET: ${{ github.event.inputs.target }}
  #   steps:
  #     - run: free -m && df -h .

  #     # - name: getConfig by raw token
  #     # - run: wget https://raw.githubusercontent.com/wtwver/atm/main/config/reconftw.bbrf?token=AM2642AZ5QKGJWXDYJB4SYTBLAAVY -O reconftw.bbrf
  #     # - run: wget https://raw.githubusercontent.com/wtwver/atm/main/config/provider-config.yaml?token=AM2642DAWFSV2KQZJHNRB33BLAMPA -O provider-config.yaml
  #     # - run: ls -R && cat ${PWD}/provider-config.yaml

  #     - name: osmedeus -subdomain
  #       run: docker run -t j3ssie/osmedeus:latest scan -t $TARGET 

  #     - name: start reconftw service
  #       run: docker run -m 5g -d --name reconftw --entrypoint bash wtwver/reconftw -c "tail -f /dev/null"
  #     #  run: docker run -m 5g -d --name reconftw -v ${PWD}/provider-config.yaml:/root/.config/notify/provider-config.yaml -v ${PWD}/reconftw.bbrf:/root/Tools/reconftw/reconftw.cfg --entrypoint bash wtwver/reconftw -c "tail -f /dev/null"
  #     # - run: docker exec reconftw rm ../../.bbrf/config.json
  #     # - run: docker exec reconftw bash install.sh
  #     # - run: docker exec reconftw sed -i '1686 a curl -T "$SCRIPTPATH/$zip_name" https://f.hoball.tk:81/upload/' reconftw.sh
      
  #     - name: reconftw -subdomain
  #       run: docker exec reconftw ./reconftw.sh -d $TARGET -s
  #     # - name:  reconftw -all
  #     #   run: docker exec reconftw ./reconftw.sh -d $TARGET -a


  rec-trigger:
      runs-on: ubuntu-latest
      env:
        TARGET: ${{ github.event.inputs.target }}
      steps:
        - run: free -m && df -h .
        # - run: docker run -t j3ssie/osmedeus:latest scan -t $TARGET 
        - run: docker run -d --name osmedeus j3ssie/osmedeus:latest server
        # - run: docker exec osmedeus osmedeus server
        - run: docker exec osmedeus bash -c "wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb && dpkg -i cloudflared-linux-amd64.deb"
        - run: docker exec osmedeus cloudflared tunnel --url https://localhost:8000  --no-tls-verify
        - run: docker exec reconftw ./reconftw.sh -d $TARGET -s